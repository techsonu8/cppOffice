// (2) Type conversion from 1 class 2 other.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;

class Item;
class Product;

class Item
{
private:
    int a, b;

public:
    void setData(int x, int y)
    {
        a = x;
        b = x;
    }

    void showData()
    {
        cout << "\nThe data of Item are  a : " << a << "and the b : " << b << endl;
    }

};

class Product
{
private:
    int m, n;

public:
    void setData(int x, int y)
    {
        m = x;
        n = y;

    }

    void showData()
    {
        cout << "\nThe data of Product are  m : " << m << "and the n : " << n << endl;
    }

    int getM()
    {
        return m;
    }

    int getN()
    {
        return n;
    }

    operator Item()
    {
        Item it;
        it.setData(m, n);

        return it;
    }
};




int main()
{
    std::cout << "Hello World!\n";
    cout << "\nwe will see type conversion from one class to another class";

    Item i1;

    Product p1;

    p1.setData(3, 4);
    i1 = p1;   // both are of class type   this will call casting operator of RHS that is product class
    i1.showData();

    /*
    this can be done in 2 ways
    1) Constructor
    2) Casting Operator


    Item i1;
    Product p1;
    p1.setData(3,4);
    i1 = p1;     // id we use constructor ... we need to make the casting operator of RHS ....here product class

     // if we want to get it done using  casting operator (RHS)...we should make operator in product class
    */

    Item i2;

    Product p2;

    i2 = p1;

}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
